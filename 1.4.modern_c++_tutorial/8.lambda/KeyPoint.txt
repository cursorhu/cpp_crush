Lambda 表达式是现代 C++ 中最重要的特性之一
Lambda 表达式用来实现匿名函数, 实现类似于其他语言（例如JavaScript）的闭包特性，或C 的函数指针
总体目的都是实现函数式编程，即函数也是变量：一个匿名函数可以被赋值给变量，然后用该变量调用函数


Lambda 表达式的基本语法如下：

    [捕获列表](参数列表) mutable(可选) 异常属性 -> 返回类型 {
    // 函数体
    }

lambda 表达式内部函数体在默认情况下是不能够使用函数体外部的变量的，捕获列表可以起到传递外部数据的作用

捕获列表的最常用的四种形式可以是：
[] 空捕获列表
[name1, name2, …] 捕获一系列变量（显式的值捕获和引用捕获）
[&] 引用捕获, 让编译器自行推导捕获列表
[=] 值捕获, 让编译器执行推导引用列表


C++14 开始，Lambda 函数的形式参数可以使用 auto 关键字来产生意义上的泛型：
    auto add = [](auto x, auto y) {
        return x+y;
    };
    add(1, 2);
    add(1.1, 2.2);